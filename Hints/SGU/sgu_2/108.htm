<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0051)http://acm.sgu.ru/problem.php?contest=0&problem=108 -->
<HTML><HEAD><TITLE>108. Self-numbers 2</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<META http-equiv=Expires content=Дата>
<META http-equiv=Cache-Control content=no-cache>
<META http-equiv=pragma content=no-cache>
<META 
content="ACM, programming contest, programming, contest, informatics, ioi, saratov, ICPC, программирование, информатика, алгоритм, саратов, контест" 
name=keywords>
<META 
content="That site consists of some amount of programming problems. Online Contester system check your solution right now. You can participate in programming contests. Train your programming skills." 
name=description><LINK href="style.css" type=text/css rel=stylesheet>
<STYLE type=text/css>TD {
	FONT-SIZE: 9pt
}
</STYLE>

<META content="MSHTML 6.00.2716.2200" name=GENERATOR></HEAD>
<BODY>
<TABLE width="95%">
  <TBODY>
  <TR>
    <TD>
      <H3><B>
      <P align=center>108. Self-numbers 2 </P></H3></B>
      <P align=center>Time Limit: 2.5 sec, Memory Limit: 1 MB </P>
      <P align=justify></P>
      <P align=justify>In 1949 the Indian mathematician D.R. Kaprekar discovered 
      a class of numbers called self-numbers. For any positive integer n, define 
      d(n) to be n plus the sum of the digits of n. (The d stands for 
      <I>digitadition</I>, a term coined by Kaprekar.) For example, d(75) = 75 + 
      7 + 5 = 87. Given any positive integer n as a starting point, you can 
      construct the infinite increasing sequence of integers n, d(n), d(d(n)), 
      d(d(d(n))), .... For example, if you start with 33, the next number is 33 
      + 3 + 3 = 39, the next is 39 + 3 + 9 = 51, the next is 51 + 5 + 1 = 57, 
      and so you generate the sequence 33, 39, 51, 57, 69, 84, 96, 111, 114, 
      120, 123, 129, 141, ... The number n is called a <B>generator</B> of 
      <B>d(n)</B>. In the sequence above, 33 is a generator of 39, 39 is a 
      generator of 51, 51 is a generator of 57, and so on. Some numbers have 
      more than one generator: for example, 101 has two generators, 91 and 100. 
      A number with <B>no generators</B> is a <B>self-number</B>. Let the a[i] 
      will be i-th self-number. There are thirteen self-numbers a[1]..a[13] less 
      than 100: 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, and 97. (the first 
      self-number is a[1]=1, the second is a[2] = 3, :, the thirteen is 
      a[13]=97); </P>
      <P align=justify></P><B>
      <P align=justify>Input</P></B>
      <P align=justify>Input contains integer numbers N, K, 
      s<SUB>1</SUB>...s<SUB>k</SUB>. (1&lt;=N&lt;=10<SUP>7</SUP>, 
      1&lt;=K&lt;=5000) delimited by spaces and line breaks. </P>
      <P align=justify></P><B>
      <P align=justify>Output</P></B>
      <P align=justify>At first line you must output one number - the quantity 
      of self-numbers in interval [1..N]. Second line must contain K numbers - 
      a[s<SUB>1</SUB>]..a[s<SUB>k</SUB>], delimited by spaces. It`s a gaurantee, 
      that all self-numbers a[s<SUB>1</SUB>]..a[s<SUB>k</SUB>] are in interval 
      [1..N]. (for example if N = 100, s<SUB>k</SUB> can be 1..13 and cannot be 
      14, because 14-th self-number a[14] = 108, 108 &gt; 100) </P>
      <P align=justify></P>
      <P align=justify>Sample Input</P><FONT face="Courier New"><PRE>100 10
1 2 3 4 5 6 7 11 12 13
</PRE>
      <P align=justify></P></FONT>
      <P align=justify>Sample Output</P><FONT face="Courier New"><PRE>13
1 3 5 7 9 20 31 75 86 97
</PRE></FONT></TD></TR></TBODY></TABLE></BODY></HTML>
